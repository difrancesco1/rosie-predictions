# H2 Database Configuration
spring.datasource.url=jdbc:h2:file:./data/twitch_predictions_db;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 Console for development
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# General API Configuration
server.servlet.context-path=/api
server.port=8080

# Twitch API Configuration (store these securely in production)
twitch.client-id=nif6nbkwne5xy8uh61ahhqdf4inkvw
twitch.client-secret=0z2fgg4hv9rzpx55v2l8lwjo9gfwzv
twitch.redirect-uri=http://localhost:3000/auth/callback

# Enable debug logging for troubleshooting
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Add these lines to your existing application.properties
# CORS Configuration (redundant with the CorsConfig.java but good to have)
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*

# Logging to help debug the issue
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG